"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const LoginController_1 = require("./controllers/LoginController");
const RecoveryController_1 = require("./controllers/RecoveryController");
const Usercontroller_1 = require("./controllers/Usercontroller");
const authMiddleware_1 = require("./middlewares/authMiddleware");
const celebrate_1 = require("celebrate");
const ValidatorFormUser_1 = require("./helpers/ValidatorFormUser");
const routes = (0, express_1.Router)();
routes.get("/users", new Usercontroller_1.UserController().getUsers);
routes.get("/", new Usercontroller_1.UserController().index);
routes.post("/users", (0, celebrate_1.celebrate)(ValidatorFormUser_1.formUserValidator), new Usercontroller_1.UserController().cadastre);
routes.get("/completeregistration/:token", (0, celebrate_1.celebrate)(ValidatorFormUser_1.formUserValidator), authMiddleware_1.authMiddlewareEmailVerification, new Usercontroller_1.UserController().completeRegistration);
routes.post("/login", new LoginController_1.LoginSistem().login);
routes.get("/profile", authMiddleware_1.authMiddleware, new LoginController_1.LoginSistem().getProfile);
routes.post("/forgotpassword", new RecoveryController_1.RecoveryPassword().forgotPasswort);
routes.post("/recoverpassword/:token", authMiddleware_1.authMiddlewareParam, new RecoveryController_1.RecoveryPassword().recoveryPassword);
routes.delete("/users", authMiddleware_1.authMiddleware, new Usercontroller_1.UserController().deleteUser);
exports.default = routes;
